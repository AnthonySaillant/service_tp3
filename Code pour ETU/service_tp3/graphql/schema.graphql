"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!
    last_name: String!
    first_name: String!
    birthdate: Date!
    films: [Film!]! @belongsToMany
}

enum Rating {
    G
    PG
    PG_13
    R
    NC_17
}

type Role {
    id: ID!
    name: String!
    Users: [User!]! @hasMany
}

type Language {
    id: ID!
    name: String!
    Films: [Film!]! @hasMany
}

type User {
    id: ID!
    login: String!
    password: String!
    email: String!
    last_name: String!
    first_name: String!
    role_id: ID!
    critics: [Critic!]! @hasMany
    role: Role! @belongsTo
}

type Film {
    id: ID!
    title: String!
    release_year: Int!
    length: Float!
    description: String!
    rating: Rating!
    language_id: ID!
    special_features: String!
    image: String!
    language: Language! @belongsTo
    critics: [Critic!]! @hasMany
    statistic: Statistic! @belongsTo
    actors: [Actor!]! @belongsToMany
}

type Critic {
    id: ID!
    user_id: ID!
    film_id: ID!
    score: String!
    comment: String!
    film: Film! @belongsTo
    user: User! @belongsTo
}

type Statistic {
    id: ID!
    average_score: Float!
    nb_votes: Int!
    film_id: ID!
    film: Film! @belongsTo
}

type Actor {
    id: ID!
    last_name: String!
    first_name: String!
    birthdate: Date!
    films: [Film!]! @belongsToMany
}

type Query {
    film(id: ID! @eq): Film @find @guard

    me: User @auth
}
